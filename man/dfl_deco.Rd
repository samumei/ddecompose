% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dfl_deco.R
\name{dfl_deco}
\alias{dfl_deco}
\title{DFL reweighting decomposition}
\usage{
dfl_deco(
  formula,
  data,
  weights,
  group,
  na.action = na.exclude,
  reference_0 = TRUE,
  reweight_marginals = TRUE,
  method = "logit",
  estimate_statistics = TRUE,
  statistics = c("quantiles", "mean", "variance", "gini", "iq_range_p90_p10",
    "iq_range_p90_p50", "iq_range_p50_p10"),
  probs = c(1:9)/10,
  custom_statistic_function = NULL,
  trimming = FALSE,
  trimming_threshold = NULL,
  return_model = TRUE,
  bootstrap = FALSE,
  bootstrap_iterations = 100,
  bootstrap_robust = FALSE,
  cores = 1,
  ...
)
}
\arguments{
\item{formula}{a `formula` object with an outcome variable Y on the left-hand side
and the covariates X on the right-hand side. For sequential decompositions,
the sequence of covariates X are distinguished by the `|` operator. Covariates
are used to estimate the reweighting factors.}

\item{data}{a `data.frame` containing all variables and observations for
both groups.}

\item{weights}{name of the observation weights variable or vector of
observation weights.}

\item{group}{name of the a binary variable (numeric or factor)
identifying the two groups for which the differences are to be decomposed.
The group identified by the lower ranked value in `group` (i.e., 0 in the
case of a dummy variable or the first level of factor variable) is defined
as group 0.}

\item{na.action}{a function to filter missing data (default `na.exclude`).}

\item{reference_0}{boolean: if `TRUE` (default), then the group 0 -- i.e.,
the group identified by the lower ranked value in `group` -- will be defined
as reference group. The reference group will be reweighted to match the
covariates distribution of the sample of the comparison group.}

\item{reweight_marginals}{If `TRUE` (default), then the sequential decomposition
reweights first the marginal (joint) distribution of the last covariate (covariates)
entered into `formula` sequence. Otherwise, the conditional distribution of
first covariate(s) entered are reweigthed.}

\item{method}{specifies the method fit and predict conditional probabilities
used to derive the reweighting factor. At the moment, `logit` is the only method
available.}

\item{estimate_statistics}{boolean: if `TRUE` (default), then distributional
statistics are estimated and the decomposition is performed. If `FALSE`,
the function only returns the propensity weights.}

\item{statistics}{a character vector that defines the distributional statistics
for which the decomposition is perforemd. Per default, `c("quantiles", "mean", "variance", "gini", "iq_range_p90_p10", "iq_range_p90_p50", "iq_range_p50_p10")`
are estimated and decomposed. Also implemented are `c("iq_ratio_p90_p10", "iq_ratio_p90_p50", "iq_ratio_p50_p10")`.
Note: The function calculates the Gini coefficient for untransformed variable
(i.e., exp(log(Y))), if the logarithm of a variable Y is set as outcome variable
in `formula`.}

\item{probs}{a vector of length 1 or more with the probabilities of the quantiles
to be estimated with default `c(1:9)/10`.}

\item{custom_statistic_function}{a custom statistic function to pass as argument.}

\item{trimming}{boolean: If `TRUE`, observations with dominant reweighting factor values are trimmend according to rule of Huber, Lechner, and Wunsch (2014). Per default, trimming is set to `FALSE`.}

\item{trimming_threshold}{numeric: threshold defining the maximal accepted relative weight of the reweighting factor value of a single observation. If `NULL`, the threshold is set to `sqrt(N)/N`, where N is the number of observations in the reference group.}

\item{return_model}{boolean: If `TRUE` (default), the object(s) of the model fit(s) used to predict
conditional probabilities for the reweighting factor(s) are returned.}

\item{bootstrap}{boolean: If `FALSE`, then the estimation is not boostrapped and no
standard errors are calculated.}

\item{bootstrap_iterations}{positive integer indicating the number of bootstrap
iterations to execute. Only required if \code{bootstrap = TRUE}.}

\item{bootstrap_robust}{boolean: if `FALSE` (default), then bootstrapped standard
errores are estimated as the standard deviations of the bootstrapp estimates.
Otherwise, the function uses the bootstrap interquartile range rescaled by the
interquantile range of the standard distribution to estimate standard errors.}

\item{cores}{positive integer indicating the number of cores to use when
computing bootstrap standard errors. Only required if \code{bootstrap = TRUE}.}

\item{...}{other parameters passed to the function estimating the conditional probabilities.}
}
\value{
an object of class `dfl_deco` containing a data.frame with the
decomposition results for the quantiles and for the other distributional
statistics, respectively, a data.frame with the estimated reweighting factor
for every observation, a data.frame with sample quantiles of the reweighting
factors and a list with standard errors for the decomposition terms, the quantiles
of the reweighting factor as well as the bootstrapped Kolmogorov-Smirnov
distribution to construct uniform confidence bands for quantiles.
}
\description{
`dfl_deco` decomposes between-group differences in distributional
statistics of an outcome variable into a structure effect and a composition effect.
As proposed by DiNardo, Fortin, and Lemieux (1996), the procedure
reweights the sample distribution of a reference group such that the group's
covariates distribution matches the covariates distribution of a counterfactual
group.

Reweighting factors are derived by modelling the probability of belonging to
the one group instead of the other conditional on covariates. The function
allows detailed decompositions of the composition effect by sequentially
reweighting (conditional) covariate distributions. Standard errors can be
bootstrapped.
}
\details{
The covariates entered into `formula` will be used to estimate the reweighting
factors, i.e. the propensities of belonging to one of the groups. `formula` also
allows to specify interaction terms in the conditional probability models.

If you are interest in an aggregate decomposition and no sequential decomposition
should be performend, the all covariates have to be entered at once, e.g.
`Y ~ X1 + X2 + X3`.

If you are interested in a sequential decomposition, the the decomposition sequence
has to be distinguished by the `|` operator. For instance, `Y ~ X1 | X2 + X3`
would decomposes the aggregate composition effect into the contribution of X1
and of the remaining two covariates, respectively. The function sequentially
collapses the multiple parts of the `formula` object. For instance, if
`reweight_marginals=TRUE` (see below), then it estimtates in a first step
the reweighting factor based on `X2 + X3` and then in a second step the one
based on `X1 + X2 + X3`.

You can also specify the detailed models in every part of `formula`. This is
useful if you want to estimate in every step a fully saturated model, e.g.
`Y ~ X1*X2*X3 | X2*X3`.

The observed difference to be decomposed is equals the value of the
distributioal statistic of `group` 0 substracted from the value of the same
statistic of `group` 1.

If `reference_0=TRUE`, then group 0 is the reference group and its observations
are reweighted such that they match the covariates distribution of group 1, the
counterfacutal group. Group 0 is identified by the lower ranked value of the
`group` variable. The composition effect is evaluated using the structure of
the reference group. The wage structure effect will be evaluated using the
covariates' distribution of the counterfactual group.

If `reweight_marginals=TRUE`, the sequential decomposition is performed by
reweighting the marginal distribution of the last covariate or the joint
distribution of the last covariates in the sequence. For instance, if we have
`Y ~ X1 | X2 + X3`, then the reference group would be first reweighted such
that its distribution of covariates X2 and X3 matches the one of the
counterfactual group. Thus, we use the marginal distribution of X2 and X3 of
the counterfactual group but the conditional distribution of X1 given X2
and X3 as well as the (wage) structure of the reference group to evaluated
the first composition effect.

If `reweight_marginals=FALSE`, the sequential decomposition is performed by
reweighting the conditional distribution of the first covariate or the joint
distribution of the first covariates in the sequence. For instance, if we have
`Y ~ X1 | X2 + X3`, then the reference group would be first reweighted such
that its conditional distribution of X1 given covariates X2 and X3 matches
the one of the counterfacutal group. Thus, we use the conditional distribution
of X1 given X2 and X3 of the counterfactual group but the joint distribution
of X2 and X3 as well as the (wage) structure of the reference group to evaluate
the first composition effect.

`method="logit"` uses a logit model to estimate the conditional probabilities
used to derive the reweighting factors. You can specify interaction terms
within the `formula` object.

Per default, the function decomposes the between-group differences for
quantiles, the mean, the variance, the Gini coefficient and the interquantile
range between the 9th and the 1st decile, the 9th decile and the median, and
the median and the first decile, respectively. Implemented are also the
interquantile ratios for between the same quantiles.

The quantiles can be specified by `probs` that sets the corresponding
probabilities of the quantiles of interest. For other distributional statistics,
please use `custom_statistic_function`.
}
\examples{
## Replicate example from handbook chapter of Fortin, Lemieux, and Firpo (FLF, 2011)
data("men8305")
men8305$weights <- men8305$weights/sum(men8305$weights) * length(men8305$weights)

flf_model <- log(wage) ~ union*(education + experience) + education*experience

# Reweighting sample from 1983-85
flf_male_inequality  <- dfl_deco(flf_model,
                                 data = men8305,
                                 weights = weights,
                                 group = year)

# Summarize results
summary(flf_male_inequality)

# Plot decomposition of qunatile differences
plot(flf_male_inequality)

# Use alternative reference group (i.e. reweight sample from 2003-05)
flf_male_inequality_reference_0305  <- dfl_deco(flf_model,
                                                data = men8305,
                                                weights = weights,
                                                group = year,
                                                reference_0 = FALSE)

# Summarize results
summary(flf_male_inequality_reference_0305)


# Bootstrap standard errors (using smaller sample for the sake of illustration)
\dontrun{
set.seed(123)
flf_male_inequality_boot  <- dfl_deco(flf_model,
                                 data = men8305[1:1000, ],
                                 weights = weights,
                                 group = year,
                                 bootstrap = TRUE,
                                 bootstrap_iterations = 100,
                                 cores = 1)

# Get standard errors and confidence intervals
summary(flf_male_inequality_boot)

# Plot quantile differences with pointwise confidence intervals
plot(flf_male_inequality_boot)

# Plot quantile differences with uniform confidence intervals
plot(flf_male_inequality_boot, uniform_bands=TRUE)

}


## Sequential decomposition
# Distinguishing the contribution of the marginal distribution of education
# and experience from the contribution of unionization conditional on
# education and experience

model_sequential <- log(wage) ~ union*(education + experience) + education*experience | education*experience

male_inequality_sequential  <- dfl_deco(model_sequential,
                                        data = men8305,
                                        weights = weights,
                                        group = year)

# Summarize results
summary(male_inequality_sequential)


# Trim observations with weak common support
# (i.e. observations with relative factor weights > \sqrt(N)/N)

set.seed(123)
data_weak_common_support <- data.frame(d = factor(c(c("A", "A", rep("B", 98)),
                                                  c(rep("A", 90), rep("B", 10)))),
                                       group = rep(c(0, 1), each = 100))
data_weak_common_support$y <- ifelse(data_weak_common_support$d == "A", 1, 2) +
                              data_weak_common_support$group +
                              rnorm(200, 0, 0.5)

deco_results_trimmed <- dfl_deco(y ~ d,
                                 data_weak_common_support,
                                 group = group,
                                 trimming = TRUE)

identical(deco_results_trimmed$trimmed_observations,
          which(data_weak_common_support$d == "A"))


}
\references{
DiNardo, John, Nicole M. Fortin, and Thomas Lemieux. 1996. "Labor Market
Institutions and the Distribution of Wages, 1973-1992: A Semiparametric Approach."
\emph{Econometrica}, 64(5), 1001-1044.

Firpo, Sergio P., Nicole M. Fortin, and Thomas Lemieux. 2018. “Decomposing Wage
Distributions Using Recentered Influence Function Regressions.”
\emph{Econometrics} 6(2), 28.

Fortin, Nicole M., Thomas Lemieux, and Sergio Firpo. 2011. "Decomposition methods in economics."
In Orley Ashenfelter and David Card, eds., \emph{Handbook of labor economics}. Vol. 4. Elsevier, 1-102.

Firpo, Sergio P., and Cristine Pinto. 2016. "Identification and Estimation of
Distributional Impacts of Interventions Using Changes in Inequality Measures."
\emph{Journal of Applied Econometrics}, 31(3), 457– 486.
}
